// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: keystone.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityState int32

const (
	EntityState_Invalid  EntityState = 0
	EntityState_Active   EntityState = 1
	EntityState_Offline  EntityState = 2
	EntityState_Corrupt  EntityState = 3
	EntityState_Archived EntityState = 4
	EntityState_Removed  EntityState = 5
)

// Enum value maps for EntityState.
var (
	EntityState_name = map[int32]string{
		0: "Invalid",
		1: "Active",
		2: "Offline",
		3: "Corrupt",
		4: "Archived",
		5: "Removed",
	}
	EntityState_value = map[string]int32{
		"Invalid":  0,
		"Active":   1,
		"Offline":  2,
		"Corrupt":  3,
		"Archived": 4,
		"Removed":  5,
	}
)

func (x EntityState) Enum() *EntityState {
	p := new(EntityState)
	*p = x
	return p
}

func (x EntityState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityState) Descriptor() protoreflect.EnumDescriptor {
	return file_keystone_proto_enumTypes[0].Descriptor()
}

func (EntityState) Type() protoreflect.EnumType {
	return &file_keystone_proto_enumTypes[0]
}

func (x EntityState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityState.Descriptor instead.
func (EntityState) EnumDescriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{0}
}

type Schema_Option int32

const (
	Schema_None           Schema_Option = 0
	Schema_StoreMutations Schema_Option = 1
)

// Enum value maps for Schema_Option.
var (
	Schema_Option_name = map[int32]string{
		0: "None",
		1: "StoreMutations",
	}
	Schema_Option_value = map[string]int32{
		"None":           0,
		"StoreMutations": 1,
	}
)

func (x Schema_Option) Enum() *Schema_Option {
	p := new(Schema_Option)
	*p = x
	return p
}

func (x Schema_Option) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Schema_Option) Descriptor() protoreflect.EnumDescriptor {
	return file_keystone_proto_enumTypes[1].Descriptor()
}

func (Schema_Option) Type() protoreflect.EnumType {
	return &file_keystone_proto_enumTypes[1]
}

func (x Schema_Option) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Schema_Option.Descriptor instead.
func (Schema_Option) EnumDescriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{2, 0}
}

type Field_Type int32

const (
	Field_Text    Field_Type = 0
	Field_Number  Field_Type = 1
	Field_Boolean Field_Type = 2
	Field_Float   Field_Type = 3
	Field_Time    Field_Type = 4
	Field_Amount  Field_Type = 5
)

// Enum value maps for Field_Type.
var (
	Field_Type_name = map[int32]string{
		0: "Text",
		1: "Number",
		2: "Boolean",
		3: "Float",
		4: "Time",
		5: "Amount",
	}
	Field_Type_value = map[string]int32{
		"Text":    0,
		"Number":  1,
		"Boolean": 2,
		"Float":   3,
		"Time":    4,
		"Amount":  5,
	}
)

func (x Field_Type) Enum() *Field_Type {
	p := new(Field_Type)
	*p = x
	return p
}

func (x Field_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Field_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_keystone_proto_enumTypes[2].Descriptor()
}

func (Field_Type) Type() protoreflect.EnumType {
	return &file_keystone_proto_enumTypes[2]
}

func (x Field_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Field_Type.Descriptor instead.
func (Field_Type) EnumDescriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{3, 0}
}

type Field_Classification int32

const (
	Field_Anonymous Field_Classification = 0 // Known Anonymous Data
	Field_Personal  Field_Classification = 1 // Known Personal Data
	Field_Secure    Field_Classification = 2 // Encrypted Data
	Field_UserInput Field_Classification = 3 // User Input
)

// Enum value maps for Field_Classification.
var (
	Field_Classification_name = map[int32]string{
		0: "Anonymous",
		1: "Personal",
		2: "Secure",
		3: "UserInput",
	}
	Field_Classification_value = map[string]int32{
		"Anonymous": 0,
		"Personal":  1,
		"Secure":    2,
		"UserInput": 3,
	}
)

func (x Field_Classification) Enum() *Field_Classification {
	p := new(Field_Classification)
	*p = x
	return p
}

func (x Field_Classification) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Field_Classification) Descriptor() protoreflect.EnumDescriptor {
	return file_keystone_proto_enumTypes[3].Descriptor()
}

func (Field_Classification) Type() protoreflect.EnumType {
	return &file_keystone_proto_enumTypes[3]
}

func (x Field_Classification) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Field_Classification.Descriptor instead.
func (Field_Classification) EnumDescriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{3, 1}
}

type Field_Option int32

const (
	Field_None          Field_Option = 0
	Field_Unique        Field_Option = 1 // Unique across all entities of this type
	Field_Indexed       Field_Option = 2 // Query e.g. SQL
	Field_Immutable     Field_Option = 3 // Write once
	Field_Required      Field_Option = 4 // Must be set on creation
	Field_ReverseLookup Field_Option = 5 // Store a direct lookup to the entity
)

// Enum value maps for Field_Option.
var (
	Field_Option_name = map[int32]string{
		0: "None",
		1: "Unique",
		2: "Indexed",
		3: "Immutable",
		4: "Required",
		5: "ReverseLookup",
	}
	Field_Option_value = map[string]int32{
		"None":          0,
		"Unique":        1,
		"Indexed":       2,
		"Immutable":     3,
		"Required":      4,
		"ReverseLookup": 5,
	}
)

func (x Field_Option) Enum() *Field_Option {
	p := new(Field_Option)
	*p = x
	return p
}

func (x Field_Option) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Field_Option) Descriptor() protoreflect.EnumDescriptor {
	return file_keystone_proto_enumTypes[4].Descriptor()
}

func (Field_Option) Type() protoreflect.EnumType {
	return &file_keystone_proto_enumTypes[4]
}

func (x Field_Option) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Field_Option.Descriptor instead.
func (Field_Option) EnumDescriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{3, 2}
}

type EntityLog_Level int32

const (
	EntityLog_Debug    EntityLog_Level = 0
	EntityLog_Info     EntityLog_Level = 1
	EntityLog_Notice   EntityLog_Level = 2
	EntityLog_Warn     EntityLog_Level = 3
	EntityLog_Error    EntityLog_Level = 4
	EntityLog_Critical EntityLog_Level = 5
	EntityLog_Alert    EntityLog_Level = 6
	EntityLog_Fatal    EntityLog_Level = 7
)

// Enum value maps for EntityLog_Level.
var (
	EntityLog_Level_name = map[int32]string{
		0: "Debug",
		1: "Info",
		2: "Notice",
		3: "Warn",
		4: "Error",
		5: "Critical",
		6: "Alert",
		7: "Fatal",
	}
	EntityLog_Level_value = map[string]int32{
		"Debug":    0,
		"Info":     1,
		"Notice":   2,
		"Warn":     3,
		"Error":    4,
		"Critical": 5,
		"Alert":    6,
		"Fatal":    7,
	}
)

func (x EntityLog_Level) Enum() *EntityLog_Level {
	p := new(EntityLog_Level)
	*p = x
	return p
}

func (x EntityLog_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityLog_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_keystone_proto_enumTypes[5].Descriptor()
}

func (EntityLog_Level) Type() protoreflect.EnumType {
	return &file_keystone_proto_enumTypes[5]
}

func (x EntityLog_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityLog_Level.Descriptor instead.
func (EntityLog_Level) EnumDescriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{11, 0}
}

type VendorApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	AppId    string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *VendorApp) Reset() {
	*x = VendorApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VendorApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorApp) ProtoMessage() {}

func (x *VendorApp) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorApp.ProtoReflect.Descriptor instead.
func (*VendorApp) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{0}
}

func (x *VendorApp) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *VendorApp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type Authorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source      *VendorApp `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Token       string     `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	WorkspaceId string     `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *Authorization) Reset() {
	*x = Authorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authorization) ProtoMessage() {}

func (x *Authorization) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authorization.ProtoReflect.Descriptor instead.
func (*Authorization) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{1}
}

func (x *Authorization) GetSource() *VendorApp {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Authorization) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Authorization) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source      *VendorApp             `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Id          string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Description string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Fields      []*Field               `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	Options     []Schema_Option        `protobuf:"varint,7,rep,packed,name=options,proto3,enum=kubex.keystone.Schema_Option" json:"options,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{2}
}

func (x *Schema) GetSource() *VendorApp {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Schema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Schema) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Schema) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Schema) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Schema) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Schema) GetOptions() []Schema_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DataType       Field_Type           `protobuf:"varint,2,opt,name=data_type,json=dataType,proto3,enum=kubex.keystone.Field_Type" json:"data_type,omitempty"`
	Classification Field_Classification `protobuf:"varint,3,opt,name=classification,proto3,enum=kubex.keystone.Field_Classification" json:"classification,omitempty"`
	Options        []Field_Option       `protobuf:"varint,4,rep,packed,name=options,proto3,enum=kubex.keystone.Field_Option" json:"options,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{3}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetDataType() Field_Type {
	if x != nil {
		return x.DataType
	}
	return Field_Text
}

func (x *Field) GetClassification() Field_Classification {
	if x != nil {
		return x.Classification
	}
	return Field_Anonymous
}

func (x *Field) GetOptions() []Field_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *VendorApp `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Key    string     `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{4}
}

func (x *Key) GetSource() *VendorApp {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Key) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Int        int64                  `protobuf:"varint,3,opt,name=Int,proto3" json:"Int,omitempty"`
	Bool       bool                   `protobuf:"varint,4,opt,name=Bool,proto3" json:"Bool,omitempty"`
	Float      float32                `protobuf:"fixed32,5,opt,name=Float,proto3" json:"Float,omitempty"`
	Time       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=Time,proto3" json:"Time,omitempty"`
	SecureText string                 `protobuf:"bytes,7,opt,name=secure_text,json=secureText,proto3" json:"secure_text,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{5}
}

func (x *Value) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Value) GetInt() int64 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *Value) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *Value) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *Value) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Value) GetSecureText() string {
	if x != nil {
		return x.SecureText
	}
	return ""
}

// Entity is a single entity definition
type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId    string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	SchemaId    string                 `protobuf:"bytes,2,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	StateChange *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=stateChange,proto3" json:"stateChange,omitempty"`
	State       EntityState            `protobuf:"varint,5,opt,name=state,proto3,enum=kubex.keystone.EntityState" json:"state,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{6}
}

func (x *Entity) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *Entity) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

func (x *Entity) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Entity) GetStateChange() *timestamppb.Timestamp {
	if x != nil {
		return x.StateChange
	}
	return nil
}

func (x *Entity) GetState() EntityState {
	if x != nil {
		return x.State
	}
	return EntityState_Invalid
}

// EntityProperty contains each property for an entity
type EntityProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *Key   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EntityProperty) Reset() {
	*x = EntityProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityProperty) ProtoMessage() {}

func (x *EntityProperty) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityProperty.ProtoReflect.Descriptor instead.
func (*EntityProperty) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{7}
}

func (x *EntityProperty) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *EntityProperty) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// EntityChild is a child entity, allowing data storage e.g. an invoice can store its items as children rather than separate entities
type EntityChild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *Key   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Cid  string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EntityChild) Reset() {
	*x = EntityChild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityChild) ProtoMessage() {}

func (x *EntityChild) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityChild.ProtoReflect.Descriptor instead.
func (*EntityChild) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{8}
}

func (x *EntityChild) GetType() *Key {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *EntityChild) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *EntityChild) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// EntityLink is a link to an external resource, e.g. website, gcs object, etc.
type EntityLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *Key   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EntityLink) Reset() {
	*x = EntityLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityLink) ProtoMessage() {}

func (x *EntityLink) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityLink.ProtoReflect.Descriptor instead.
func (*EntityLink) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{9}
}

func (x *EntityLink) GetType() *Key {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *EntityLink) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *EntityLink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// EntityDatum is a single data point for an entity, for storing a blob of data against the entity
type EntityDatum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *VendorApp `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Data   []byte     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EntityDatum) Reset() {
	*x = EntityDatum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityDatum) ProtoMessage() {}

func (x *EntityDatum) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityDatum.ProtoReflect.Descriptor instead.
func (*EntityDatum) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{10}
}

func (x *EntityDatum) GetSource() *VendorApp {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *EntityDatum) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// EntityLog is a single log entry for an entity
type EntityLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor     string                 `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	Tid       string                 `protobuf:"bytes,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Level     EntityLog_Level        `protobuf:"varint,3,opt,name=level,proto3,enum=kubex.keystone.EntityLog_Level" json:"level,omitempty"`
	Message   string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Reference string                 `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	TraceId   string                 `protobuf:"bytes,6,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	Time      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	Data      map[string]string      `protobuf:"bytes,8,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EntityLog) Reset() {
	*x = EntityLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityLog) ProtoMessage() {}

func (x *EntityLog) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityLog.ProtoReflect.Descriptor instead.
func (*EntityLog) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{11}
}

func (x *EntityLog) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *EntityLog) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *EntityLog) GetLevel() EntityLog_Level {
	if x != nil {
		return x.Level
	}
	return EntityLog_Debug
}

func (x *EntityLog) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EntityLog) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *EntityLog) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *EntityLog) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *EntityLog) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// EntityEvent is a single event for an entity, for storing a blob of data against the event for filtering
type EntityEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *Key                   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Tid  string                 `protobuf:"bytes,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Time *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Data []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EntityEvent) Reset() {
	*x = EntityEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityEvent) ProtoMessage() {}

func (x *EntityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityEvent.ProtoReflect.Descriptor instead.
func (*EntityEvent) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{12}
}

func (x *EntityEvent) GetType() *Key {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *EntityEvent) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *EntityEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *EntityEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// EntityRelationship is a relationship between two entities
type EntityRelationship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relationship *Key                   `protobuf:"bytes,1,opt,name=relationship,proto3" json:"relationship,omitempty"`
	TargetId     string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Since        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=Since,proto3" json:"Since,omitempty"`
	Data         []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EntityRelationship) Reset() {
	*x = EntityRelationship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityRelationship) ProtoMessage() {}

func (x *EntityRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityRelationship.ProtoReflect.Descriptor instead.
func (*EntityRelationship) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{13}
}

func (x *EntityRelationship) GetRelationship() *Key {
	if x != nil {
		return x.Relationship
	}
	return nil
}

func (x *EntityRelationship) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *EntityRelationship) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *EntityRelationship) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type EntityLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EntityLabel) Reset() {
	*x = EntityLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityLabel) ProtoMessage() {}

func (x *EntityLabel) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityLabel.ProtoReflect.Descriptor instead.
func (*EntityLabel) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{14}
}

func (x *EntityLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityLabel) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type MutateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *Authorization `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	EntityId      string         `protobuf:"bytes,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Schema        *Key           `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	Mutations     []*Mutation    `protobuf:"bytes,5,rep,name=mutations,proto3" json:"mutations,omitempty"`
}

func (x *MutateRequest) Reset() {
	*x = MutateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateRequest) ProtoMessage() {}

func (x *MutateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateRequest.ProtoReflect.Descriptor instead.
func (*MutateRequest) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{15}
}

func (x *MutateRequest) GetAuthorization() *Authorization {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *MutateRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *MutateRequest) GetSchema() *Key {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *MutateRequest) GetMutations() []*Mutation {
	if x != nil {
		return x.Mutations
	}
	return nil
}

type Mutator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAgent string   `protobuf:"bytes,1,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	RemoteIp  string   `protobuf:"bytes,2,opt,name=remote_ip,json=remoteIp,proto3" json:"remote_ip,omitempty"`
	UserId    string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Client    string   `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
	Parent    *Mutator `protobuf:"bytes,5,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *Mutator) Reset() {
	*x = Mutator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mutator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mutator) ProtoMessage() {}

func (x *Mutator) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mutator.ProtoReflect.Descriptor instead.
func (*Mutator) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{16}
}

func (x *Mutator) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Mutator) GetRemoteIp() string {
	if x != nil {
		return x.RemoteIp
	}
	return ""
}

func (x *Mutator) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Mutator) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *Mutator) GetParent() *Mutator {
	if x != nil {
		return x.Parent
	}
	return nil
}

type Mutation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutator             *Mutator               `protobuf:"bytes,1,opt,name=mutator,proto3" json:"mutator,omitempty"`
	Timestamp           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Comment             string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	State               EntityState            `protobuf:"varint,4,opt,name=state,proto3,enum=kubex.keystone.EntityState" json:"state,omitempty"`
	Properties          []*EntityProperty      `protobuf:"bytes,10,rep,name=properties,proto3" json:"properties,omitempty"`
	RemoveProperties    []string               `protobuf:"bytes,11,rep,name=remove_properties,json=removeProperties,proto3" json:"remove_properties,omitempty"`
	Logs                []*EntityLog           `protobuf:"bytes,15,rep,name=logs,proto3" json:"logs,omitempty"`
	Events              []*EntityEvent         `protobuf:"bytes,20,rep,name=events,proto3" json:"events,omitempty"`
	Children            []*EntityChild         `protobuf:"bytes,25,rep,name=children,proto3" json:"children,omitempty"`
	RemoveChildren      []*EntityChild         `protobuf:"bytes,26,rep,name=remove_children,json=removeChildren,proto3" json:"remove_children,omitempty"`
	Relationships       []*EntityRelationship  `protobuf:"bytes,30,rep,name=relationships,proto3" json:"relationships,omitempty"`
	RemoveRelationships []*EntityRelationship  `protobuf:"bytes,31,rep,name=remove_relationships,json=removeRelationships,proto3" json:"remove_relationships,omitempty"`
	Links               []*EntityLink          `protobuf:"bytes,35,rep,name=links,proto3" json:"links,omitempty"`
	RemoveLinks         []*EntityLink          `protobuf:"bytes,36,rep,name=remove_links,json=removeLinks,proto3" json:"remove_links,omitempty"`
	Labels              []*EntityLabel         `protobuf:"bytes,40,rep,name=labels,proto3" json:"labels,omitempty"`
	RemoveLabels        []*EntityLabel         `protobuf:"bytes,41,rep,name=remove_labels,json=removeLabels,proto3" json:"remove_labels,omitempty"`
	Datum               []byte                 `protobuf:"bytes,45,opt,name=datum,proto3" json:"datum,omitempty"`
}

func (x *Mutation) Reset() {
	*x = Mutation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mutation) ProtoMessage() {}

func (x *Mutation) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mutation.ProtoReflect.Descriptor instead.
func (*Mutation) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{17}
}

func (x *Mutation) GetMutator() *Mutator {
	if x != nil {
		return x.Mutator
	}
	return nil
}

func (x *Mutation) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Mutation) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Mutation) GetState() EntityState {
	if x != nil {
		return x.State
	}
	return EntityState_Invalid
}

func (x *Mutation) GetProperties() []*EntityProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Mutation) GetRemoveProperties() []string {
	if x != nil {
		return x.RemoveProperties
	}
	return nil
}

func (x *Mutation) GetLogs() []*EntityLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Mutation) GetEvents() []*EntityEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Mutation) GetChildren() []*EntityChild {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Mutation) GetRemoveChildren() []*EntityChild {
	if x != nil {
		return x.RemoveChildren
	}
	return nil
}

func (x *Mutation) GetRelationships() []*EntityRelationship {
	if x != nil {
		return x.Relationships
	}
	return nil
}

func (x *Mutation) GetRemoveRelationships() []*EntityRelationship {
	if x != nil {
		return x.RemoveRelationships
	}
	return nil
}

func (x *Mutation) GetLinks() []*EntityLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Mutation) GetRemoveLinks() []*EntityLink {
	if x != nil {
		return x.RemoveLinks
	}
	return nil
}

func (x *Mutation) GetLabels() []*EntityLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Mutation) GetRemoveLabels() []*EntityLabel {
	if x != nil {
		return x.RemoveLabels
	}
	return nil
}

func (x *Mutation) GetDatum() []byte {
	if x != nil {
		return x.Datum
	}
	return nil
}

type MutateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Success       bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorCode     int32  `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	EntityId      string `protobuf:"bytes,5,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *MutateResponse) Reset() {
	*x = MutateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateResponse) ProtoMessage() {}

func (x *MutateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateResponse.ProtoReflect.Descriptor instead.
func (*MutateResponse) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{18}
}

func (x *MutateResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *MutateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MutateResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MutateResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *MutateResponse) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type RetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *Authorization     `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	EntityId      string             `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Properties    []*PropertyRequest `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *RetrieveRequest) Reset() {
	*x = RetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveRequest) ProtoMessage() {}

func (x *RetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveRequest.ProtoReflect.Descriptor instead.
func (*RetrieveRequest) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{19}
}

func (x *RetrieveRequest) GetAuthorization() *Authorization {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *RetrieveRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *RetrieveRequest) GetProperties() []*PropertyRequest {
	if x != nil {
		return x.Properties
	}
	return nil
}

type PropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property *Key `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	Decrypt  bool `protobuf:"varint,2,opt,name=decrypt,proto3" json:"decrypt,omitempty"`
}

func (x *PropertyRequest) Reset() {
	*x = PropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyRequest) ProtoMessage() {}

func (x *PropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyRequest.ProtoReflect.Descriptor instead.
func (*PropertyRequest) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{20}
}

func (x *PropertyRequest) GetProperty() *Key {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *PropertyRequest) GetDecrypt() bool {
	if x != nil {
		return x.Decrypt
	}
	return false
}

type FindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *Authorization     `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	Schema        *Key               `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Properties    []*PropertyRequest `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty"`
	Filters       []*FilterProperty  `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *FindRequest) Reset() {
	*x = FindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest) ProtoMessage() {}

func (x *FindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest.ProtoReflect.Descriptor instead.
func (*FindRequest) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{21}
}

func (x *FindRequest) GetAuthorization() *Authorization {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *FindRequest) GetSchema() *Key {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *FindRequest) GetProperties() []*PropertyRequest {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *FindRequest) GetFilters() []*FilterProperty {
	if x != nil {
		return x.Filters
	}
	return nil
}

type FilterProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property *Key   `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	Operator string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Value    *Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FilterProperty) Reset() {
	*x = FilterProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterProperty) ProtoMessage() {}

func (x *FilterProperty) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterProperty.ProtoReflect.Descriptor instead.
func (*FilterProperty) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{22}
}

func (x *FilterProperty) GetProperty() *Key {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *FilterProperty) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *FilterProperty) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type FindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *FindResponse) Reset() {
	*x = FindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindResponse) ProtoMessage() {}

func (x *FindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindResponse.ProtoReflect.Descriptor instead.
func (*FindResponse) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{23}
}

func (x *FindResponse) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type LookupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *Authorization `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	LookupId      string         `protobuf:"bytes,2,opt,name=lookup_id,json=lookupId,proto3" json:"lookup_id,omitempty"`
}

func (x *LookupRequest) Reset() {
	*x = LookupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystone_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupRequest) ProtoMessage() {}

func (x *LookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keystone_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupRequest.ProtoReflect.Descriptor instead.
func (*LookupRequest) Descriptor() ([]byte, []int) {
	return file_keystone_proto_rawDescGZIP(), []int{24}
}

func (x *LookupRequest) GetAuthorization() *Authorization {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *LookupRequest) GetLookupId() string {
	if x != nil {
		return x.LookupId
	}
	return ""
}

var File_keystone_proto protoreflect.FileDescriptor

var file_keystone_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3f, 0x0a, 0x09, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x22, 0x7b, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22,
	0xc7, 0x02, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x41, 0x70, 0x70, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x26, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x01, 0x22, 0xcd, 0x03, 0x0a, 0x05, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x4c, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x10, 0x05, 0x22, 0x48, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x10, 0x03, 0x22, 0x5b, 0x0a, 0x06,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6d, 0x6d,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x10, 0x05, 0x22, 0x4a, 0x0a, 0x03, 0x4b, 0x65, 0x79,
	0x12, 0x31, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa8, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x49, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12,
	0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x22, 0xe9, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x64, 0x0a, 0x0e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x25,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x4b, 0x65, 0x79,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x5c, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x65, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x27,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x4b, 0x65,
	0x79, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x70,
	0x70, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc2, 0x03,
	0x0a, 0x09, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x61, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x61, 0x72,
	0x6e, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x61, 0x74, 0x61, 0x6c,
	0x10, 0x07, 0x22, 0x8c, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x2e, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e,
	0x4b, 0x65, 0x79, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x05, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x53, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd6, 0x01,
	0x0a, 0x0d, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x36,
	0x0a, 0x09, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x07, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x70, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x2f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x22, 0xb3, 0x07, 0x0a, 0x08, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a,
	0x07, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e,
	0x4d, 0x75, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x12, 0x44, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x73, 0x12, 0x55, 0x0a, 0x14, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0b, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x40,
	0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x29, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22, 0xb2, 0x01, 0x0a, 0x0e, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x0f,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x5c, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x22, 0xfa, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x43, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x8a, 0x01,
	0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2b, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x0c, 0x46, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x71,
	0x0a, 0x0d, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x49,
	0x64, 0x2a, 0x5b, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x72, 0x72, 0x75, 0x70,
	0x74, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x10,
	0x04, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x05, 0x32, 0xe6,
	0x02, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x16, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x1f,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x04, 0x46, 0x69, 0x6e,
	0x64, 0x12, 0x1b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x06, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x78, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x2e, 0x2e, 0x2f, 0x6b, 0x65,
	0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_keystone_proto_rawDescOnce sync.Once
	file_keystone_proto_rawDescData = file_keystone_proto_rawDesc
)

func file_keystone_proto_rawDescGZIP() []byte {
	file_keystone_proto_rawDescOnce.Do(func() {
		file_keystone_proto_rawDescData = protoimpl.X.CompressGZIP(file_keystone_proto_rawDescData)
	})
	return file_keystone_proto_rawDescData
}

var file_keystone_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_keystone_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_keystone_proto_goTypes = []interface{}{
	(EntityState)(0),              // 0: kubex.keystone.EntityState
	(Schema_Option)(0),            // 1: kubex.keystone.Schema.Option
	(Field_Type)(0),               // 2: kubex.keystone.Field.Type
	(Field_Classification)(0),     // 3: kubex.keystone.Field.Classification
	(Field_Option)(0),             // 4: kubex.keystone.Field.Option
	(EntityLog_Level)(0),          // 5: kubex.keystone.EntityLog.Level
	(*VendorApp)(nil),             // 6: kubex.keystone.VendorApp
	(*Authorization)(nil),         // 7: kubex.keystone.Authorization
	(*Schema)(nil),                // 8: kubex.keystone.Schema
	(*Field)(nil),                 // 9: kubex.keystone.Field
	(*Key)(nil),                   // 10: kubex.keystone.Key
	(*Value)(nil),                 // 11: kubex.keystone.Value
	(*Entity)(nil),                // 12: kubex.keystone.Entity
	(*EntityProperty)(nil),        // 13: kubex.keystone.EntityProperty
	(*EntityChild)(nil),           // 14: kubex.keystone.EntityChild
	(*EntityLink)(nil),            // 15: kubex.keystone.EntityLink
	(*EntityDatum)(nil),           // 16: kubex.keystone.EntityDatum
	(*EntityLog)(nil),             // 17: kubex.keystone.EntityLog
	(*EntityEvent)(nil),           // 18: kubex.keystone.EntityEvent
	(*EntityRelationship)(nil),    // 19: kubex.keystone.EntityRelationship
	(*EntityLabel)(nil),           // 20: kubex.keystone.EntityLabel
	(*MutateRequest)(nil),         // 21: kubex.keystone.MutateRequest
	(*Mutator)(nil),               // 22: kubex.keystone.Mutator
	(*Mutation)(nil),              // 23: kubex.keystone.Mutation
	(*MutateResponse)(nil),        // 24: kubex.keystone.MutateResponse
	(*RetrieveRequest)(nil),       // 25: kubex.keystone.RetrieveRequest
	(*PropertyRequest)(nil),       // 26: kubex.keystone.PropertyRequest
	(*FindRequest)(nil),           // 27: kubex.keystone.FindRequest
	(*FilterProperty)(nil),        // 28: kubex.keystone.FilterProperty
	(*FindResponse)(nil),          // 29: kubex.keystone.FindResponse
	(*LookupRequest)(nil),         // 30: kubex.keystone.LookupRequest
	nil,                           // 31: kubex.keystone.EntityLog.DataEntry
	(*timestamppb.Timestamp)(nil), // 32: google.protobuf.Timestamp
}
var file_keystone_proto_depIdxs = []int32{
	6,  // 0: kubex.keystone.Authorization.source:type_name -> kubex.keystone.VendorApp
	6,  // 1: kubex.keystone.Schema.source:type_name -> kubex.keystone.VendorApp
	32, // 2: kubex.keystone.Schema.created:type_name -> google.protobuf.Timestamp
	9,  // 3: kubex.keystone.Schema.fields:type_name -> kubex.keystone.Field
	1,  // 4: kubex.keystone.Schema.options:type_name -> kubex.keystone.Schema.Option
	2,  // 5: kubex.keystone.Field.data_type:type_name -> kubex.keystone.Field.Type
	3,  // 6: kubex.keystone.Field.classification:type_name -> kubex.keystone.Field.Classification
	4,  // 7: kubex.keystone.Field.options:type_name -> kubex.keystone.Field.Option
	6,  // 8: kubex.keystone.Key.source:type_name -> kubex.keystone.VendorApp
	32, // 9: kubex.keystone.Value.Time:type_name -> google.protobuf.Timestamp
	32, // 10: kubex.keystone.Entity.created:type_name -> google.protobuf.Timestamp
	32, // 11: kubex.keystone.Entity.stateChange:type_name -> google.protobuf.Timestamp
	0,  // 12: kubex.keystone.Entity.state:type_name -> kubex.keystone.EntityState
	10, // 13: kubex.keystone.EntityProperty.key:type_name -> kubex.keystone.Key
	11, // 14: kubex.keystone.EntityProperty.value:type_name -> kubex.keystone.Value
	10, // 15: kubex.keystone.EntityChild.type:type_name -> kubex.keystone.Key
	10, // 16: kubex.keystone.EntityLink.type:type_name -> kubex.keystone.Key
	6,  // 17: kubex.keystone.EntityDatum.source:type_name -> kubex.keystone.VendorApp
	5,  // 18: kubex.keystone.EntityLog.level:type_name -> kubex.keystone.EntityLog.Level
	32, // 19: kubex.keystone.EntityLog.time:type_name -> google.protobuf.Timestamp
	31, // 20: kubex.keystone.EntityLog.data:type_name -> kubex.keystone.EntityLog.DataEntry
	10, // 21: kubex.keystone.EntityEvent.type:type_name -> kubex.keystone.Key
	32, // 22: kubex.keystone.EntityEvent.time:type_name -> google.protobuf.Timestamp
	10, // 23: kubex.keystone.EntityRelationship.relationship:type_name -> kubex.keystone.Key
	32, // 24: kubex.keystone.EntityRelationship.Since:type_name -> google.protobuf.Timestamp
	7,  // 25: kubex.keystone.MutateRequest.authorization:type_name -> kubex.keystone.Authorization
	10, // 26: kubex.keystone.MutateRequest.schema:type_name -> kubex.keystone.Key
	23, // 27: kubex.keystone.MutateRequest.mutations:type_name -> kubex.keystone.Mutation
	22, // 28: kubex.keystone.Mutator.parent:type_name -> kubex.keystone.Mutator
	22, // 29: kubex.keystone.Mutation.mutator:type_name -> kubex.keystone.Mutator
	32, // 30: kubex.keystone.Mutation.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 31: kubex.keystone.Mutation.state:type_name -> kubex.keystone.EntityState
	13, // 32: kubex.keystone.Mutation.properties:type_name -> kubex.keystone.EntityProperty
	17, // 33: kubex.keystone.Mutation.logs:type_name -> kubex.keystone.EntityLog
	18, // 34: kubex.keystone.Mutation.events:type_name -> kubex.keystone.EntityEvent
	14, // 35: kubex.keystone.Mutation.children:type_name -> kubex.keystone.EntityChild
	14, // 36: kubex.keystone.Mutation.remove_children:type_name -> kubex.keystone.EntityChild
	19, // 37: kubex.keystone.Mutation.relationships:type_name -> kubex.keystone.EntityRelationship
	19, // 38: kubex.keystone.Mutation.remove_relationships:type_name -> kubex.keystone.EntityRelationship
	15, // 39: kubex.keystone.Mutation.links:type_name -> kubex.keystone.EntityLink
	15, // 40: kubex.keystone.Mutation.remove_links:type_name -> kubex.keystone.EntityLink
	20, // 41: kubex.keystone.Mutation.labels:type_name -> kubex.keystone.EntityLabel
	20, // 42: kubex.keystone.Mutation.remove_labels:type_name -> kubex.keystone.EntityLabel
	7,  // 43: kubex.keystone.RetrieveRequest.authorization:type_name -> kubex.keystone.Authorization
	26, // 44: kubex.keystone.RetrieveRequest.properties:type_name -> kubex.keystone.PropertyRequest
	10, // 45: kubex.keystone.PropertyRequest.property:type_name -> kubex.keystone.Key
	7,  // 46: kubex.keystone.FindRequest.authorization:type_name -> kubex.keystone.Authorization
	10, // 47: kubex.keystone.FindRequest.schema:type_name -> kubex.keystone.Key
	26, // 48: kubex.keystone.FindRequest.properties:type_name -> kubex.keystone.PropertyRequest
	28, // 49: kubex.keystone.FindRequest.filters:type_name -> kubex.keystone.FilterProperty
	10, // 50: kubex.keystone.FilterProperty.property:type_name -> kubex.keystone.Key
	11, // 51: kubex.keystone.FilterProperty.value:type_name -> kubex.keystone.Value
	12, // 52: kubex.keystone.FindResponse.entities:type_name -> kubex.keystone.Entity
	7,  // 53: kubex.keystone.LookupRequest.authorization:type_name -> kubex.keystone.Authorization
	8,  // 54: kubex.keystone.Keystone.Define:input_type -> kubex.keystone.Schema
	21, // 55: kubex.keystone.Keystone.Mutate:input_type -> kubex.keystone.MutateRequest
	25, // 56: kubex.keystone.Keystone.Retrieve:input_type -> kubex.keystone.RetrieveRequest
	27, // 57: kubex.keystone.Keystone.Find:input_type -> kubex.keystone.FindRequest
	30, // 58: kubex.keystone.Keystone.Lookup:input_type -> kubex.keystone.LookupRequest
	8,  // 59: kubex.keystone.Keystone.Define:output_type -> kubex.keystone.Schema
	24, // 60: kubex.keystone.Keystone.Mutate:output_type -> kubex.keystone.MutateResponse
	12, // 61: kubex.keystone.Keystone.Retrieve:output_type -> kubex.keystone.Entity
	29, // 62: kubex.keystone.Keystone.Find:output_type -> kubex.keystone.FindResponse
	29, // 63: kubex.keystone.Keystone.Lookup:output_type -> kubex.keystone.FindResponse
	59, // [59:64] is the sub-list for method output_type
	54, // [54:59] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_keystone_proto_init() }
func file_keystone_proto_init() {
	if File_keystone_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_keystone_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityChild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityDatum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityRelationship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mutator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mutation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystone_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_keystone_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_keystone_proto_goTypes,
		DependencyIndexes: file_keystone_proto_depIdxs,
		EnumInfos:         file_keystone_proto_enumTypes,
		MessageInfos:      file_keystone_proto_msgTypes,
	}.Build()
	File_keystone_proto = out.File
	file_keystone_proto_rawDesc = nil
	file_keystone_proto_goTypes = nil
	file_keystone_proto_depIdxs = nil
}
